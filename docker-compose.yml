
services:
  algorand-node:
    build: .
    image: algorand-node
    container_name: algorand-node
    restart: unless-stopped
    ports:
      - "8080:8080"  # Algorand Node API
      - "4160:4160"  # Algorand Node Client (Goal)
      - "4161:4161"  # Algorand Peer Communication
      - "7833:7833"
    volumes:
      - ./data:/algod/data       # Persistent data directory for Algorand
      - algorand-logs:/algod/logs       # Persistent log directory for logs
    secrets:
      - ACCOUNT_MNEMONIC
      - ALGOD_TOKEN
      - WALLET_NAME
      - WALLET_PASSWORD
    environment:
      ALGOD_ADDRESS: "http://0.0.0.0:8080"  # Use container-wide accessible address
      NETWORK: "mainnet"
    networks:
      - algorand-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    # ports:
    #   - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - algorand-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    # ports:
    #   - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - algorand-network

volumes:
  algorand-data:
    driver: local
  algorand-logs:
    driver: local
  grafana-data:
    driver: local

secrets:
  ACCOUNT_MNEMONIC:
    file: ./secrets/ACCOUNT_MNEMONIC  # Replace with actual path to your secret file
  ALGOD_TOKEN:
    file: ./secrets/ALGOD_TOKEN       # Replace with actual path to your secret file
  WALLET_NAME:
    file: ./secrets/WALLET_NAME       # Replace with actual path to your secret file
  WALLET_PASSWORD:
    file: ./secrets/WALLET_PASSWORD   # Replace with actual path to your secret file

networks:
  algorand-network:
    driver: bridge